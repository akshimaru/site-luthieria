import toast from 'react-hot-toast'

// Custom toast utility with predefined styles and messages
export const adminToast = {
  // Success toasts
  save: (item?: string) => 
    toast.success(`‚úÖ ${item ? `${item} salvo` : 'Salvo'} com sucesso!`),
  
  update: (item?: string) => 
    toast.success(`‚úÖ ${item ? `${item} atualizado` : 'Atualizado'} com sucesso!`),
  
  create: (item?: string) => 
    toast.success(`‚úÖ ${item ? `${item} criado` : 'Criado'} com sucesso!`),
  
  delete: (item?: string) => 
    toast.success(`üóëÔ∏è ${item ? `${item} exclu√≠do` : 'Exclu√≠do'} com sucesso!`),
  
  activate: (item?: string) => 
    toast.success(`‚úÖ ${item ? `${item} ativado` : 'Ativado'} com sucesso!`),
  
  deactivate: (item?: string) => 
    toast.success(`‚è∏Ô∏è ${item ? `${item} desativado` : 'Desativado'} com sucesso!`),
  
  feature: (item?: string) => 
    toast.success(`‚≠ê ${item ? `${item} destacado` : 'Destacado'} com sucesso!`),
  
  unfeature: (item?: string) => 
    toast.success(`üìå ${item ? `${item} removido dos destaques` : 'Removido dos destaques'} com sucesso!`),

  // Loading toasts
  loading: {
    save: (item?: string, id?: string) => 
      toast.loading(`üíæ Salvando ${item ? item.toLowerCase() : ''}...`, { id }),
    
    update: (item?: string, id?: string) => 
      toast.loading(`üîÑ Atualizando ${item ? item.toLowerCase() : ''}...`, { id }),
    
    create: (item?: string, id?: string) => 
      toast.loading(`‚ûï Criando ${item ? item.toLowerCase() : ''}...`, { id }),
    
    delete: (item?: string, id?: string) => 
      toast.loading(`üóëÔ∏è Excluindo ${item ? item.toLowerCase() : ''}...`, { id }),
    
    upload: (item?: string, id?: string) => 
      toast.loading(`‚¨ÜÔ∏è Enviando ${item ? item.toLowerCase() : ''}...`, { id }),
    
    processing: (action?: string, id?: string) => 
      toast.loading(`‚öôÔ∏è ${action ? `${action}...` : 'Processando...'}`, { id }),
  },

  // Error toasts
  error: {
    save: (item?: string, id?: string) => 
      toast.error(`‚ùå Erro ao salvar ${item ? item.toLowerCase() : ''}`, { id }),
    
    update: (item?: string, id?: string) => 
      toast.error(`‚ùå Erro ao atualizar ${item ? item.toLowerCase() : ''}`, { id }),
    
    create: (item?: string, id?: string) => 
      toast.error(`‚ùå Erro ao criar ${item ? item.toLowerCase() : ''}`, { id }),
    
    delete: (item?: string, id?: string) => 
      toast.error(`‚ùå Erro ao excluir ${item ? item.toLowerCase() : ''}`, { id }),
    
    load: (item?: string, id?: string) => 
      toast.error(`‚ùå Erro ao carregar ${item ? item.toLowerCase() : ''}`, { id }),
    
    upload: (item?: string, id?: string) => 
      toast.error(`‚ùå Erro ao enviar ${item ? item.toLowerCase() : ''}`, { id }),
    
    generic: (message: string, id?: string) => 
      toast.error(`‚ùå ${message}`, { id }),
  },

  // Info/Warning toasts
  info: (message: string, id?: string) => 
    toast(`‚ÑπÔ∏è ${message}`, { id }),
  
  warning: (message: string, id?: string) => 
    toast(`‚ö†Ô∏è ${message}`, { 
      id,
      icon: '‚ö†Ô∏è',
      style: {
        background: '#f59e0b',
        color: 'white',
      },
    }),

  // Logout specific
  logout: {
    loading: () => toast.loading('üö™ Saindo...', { id: 'logout' }),
    success: () => toast.success('‚úÖ Desconectado com sucesso!', { id: 'logout' }),
    error: () => toast.error('‚ùå Erro ao desconectar', { id: 'logout' }),
  },

  // Validation errors
  validation: (message: string) => 
    toast.error(`‚ö†Ô∏è ${message}`, {
      style: {
        background: '#f59e0b',
        color: 'white',
      },
    }),
}

// Export the original toast for custom cases
export { toast }
export default adminToast
